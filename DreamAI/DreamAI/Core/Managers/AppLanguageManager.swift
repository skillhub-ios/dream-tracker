//
// AppLanguageManager.swift
//
// Created by Cesare on 15.07.2025 on Earth.
//

import SwiftUI

protocol AppLanguageManagerProtocol {
    func openSystemLanguageSettings()
    var currentLanguageCode: String { get }
    var currentLanguageFlag: String { get }
}

final class AppLanguageManager: AppLanguageManagerProtocol {
    
    func openSystemLanguageSettings() {
        guard let url = URL(string: UIApplication.openSettingsURLString),
              UIApplication.shared.canOpenURL(url) else { return }
        UIApplication.shared.open(url)
    }
    
    var currentLanguageCode: String {
        guard let fullCode = Locale.preferredLanguages.first else { return "en" }
        return String(fullCode.prefix(2))
    }
    
    var currentLanguageDisplayName: String {
        Locale.current.localizedString(forLanguageCode: currentLanguageCode) ?? currentLanguageCode
    }
    
    var currentLanguageFlag: String {
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ - –≤—Å–µ–≥–¥–∞ —Ñ–ª–∞–≥ –°–®–ê
            if currentLanguageCode == "en" {
                return "üá∫üá∏"
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–¥ –ª–æ–∫–∞–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "ru_RU", "de_DE")
            guard let fullLocaleCode = Locale.preferredLanguages.first else {
                return "üá∫üá∏" // fallback –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ
            }
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ –∏–∑ –ª–æ–∫–∞–ª–∏
            let locale = Locale(identifier: fullLocaleCode)
            guard let regionCode = locale.regionCode else {
                return "üè≥Ô∏è" // —Ñ–ª–∞–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ —Ä–µ–≥–∏–æ–Ω –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
            }
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞ –≤ —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–∞
            return flagEmoji(for: regionCode)
        }
    
    private func flagEmoji(for regionCode: String) -> String {
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ISO –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –≤ —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–∞
            let base: UInt32 = 127397
            var flagString = ""
            
            for character in regionCode.uppercased() {
                if let scalar = character.unicodeScalars.first {
                    let flagScalar = UnicodeScalar(base + scalar.value)!
                    flagString += String(flagScalar)
                }
            }
            
            return flagString.isEmpty ? "üè≥Ô∏è" : flagString
        }
}

private struct AppLanguageManagerKey: EnvironmentKey {
    static let defaultValue: AppLanguageManager = AppLanguageManager()
}

extension EnvironmentValues {
    var languageManager: AppLanguageManager {
        get { self[AppLanguageManagerKey.self] }
        set { self[AppLanguageManagerKey.self] = newValue }
    }
}
